//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: rpc.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// GnomobileService is the service to interact with the Gno blockchain
///
/// Usage: instantiate `Land_Gno_Gnomobile_V1_GnomobileServiceClient`, then call methods of this protocol to make API calls.
internal protocol Land_Gno_Gnomobile_V1_GnomobileServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Land_Gno_Gnomobile_V1_GnomobileServiceClientInterceptorFactoryProtocol? { get }

  func setRemote(
    _ request: Land_Gno_Gnomobile_V1_SetRemoteRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_SetRemoteRequest, Land_Gno_Gnomobile_V1_SetRemoteResponse>

  func setChainID(
    _ request: Land_Gno_Gnomobile_V1_SetChainIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_SetChainIDRequest, Land_Gno_Gnomobile_V1_SetChainIDResponse>

  func setPassword(
    _ request: Land_Gno_Gnomobile_V1_SetPasswordRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_SetPasswordRequest, Land_Gno_Gnomobile_V1_SetPasswordResponse>

  func generateRecoveryPhrase(
    _ request: Land_Gno_Gnomobile_V1_GenerateRecoveryPhraseRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_GenerateRecoveryPhraseRequest, Land_Gno_Gnomobile_V1_GenerateRecoveryPhraseResponse>

  func listKeyInfo(
    _ request: Land_Gno_Gnomobile_V1_ListKeyInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_ListKeyInfoRequest, Land_Gno_Gnomobile_V1_ListKeyInfoResponse>

  func createAccount(
    _ request: Land_Gno_Gnomobile_V1_CreateAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_CreateAccountRequest, Land_Gno_Gnomobile_V1_CreateAccountResponse>

  func selectAccount(
    _ request: Land_Gno_Gnomobile_V1_SelectAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_SelectAccountRequest, Land_Gno_Gnomobile_V1_SelectAccountResponse>

  func getActiveAccount(
    _ request: Land_Gno_Gnomobile_V1_GetActiveAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_GetActiveAccountRequest, Land_Gno_Gnomobile_V1_GetActiveAccountResponse>

  func deleteAccount(
    _ request: Land_Gno_Gnomobile_V1_DeleteAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_DeleteAccountRequest, Land_Gno_Gnomobile_V1_DeleteAccountResponse>

  func query(
    _ request: Land_Gno_Gnomobile_V1_QueryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_QueryRequest, Land_Gno_Gnomobile_V1_QueryResponse>

  func call(
    _ request: Land_Gno_Gnomobile_V1_CallRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_CallRequest, Land_Gno_Gnomobile_V1_CallResponse>

  func hello(
    _ request: Land_Gno_Gnomobile_V1_HelloRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_HelloRequest, Land_Gno_Gnomobile_V1_HelloResponse>
}

extension Land_Gno_Gnomobile_V1_GnomobileServiceClientProtocol {
  internal var serviceName: String {
    return "land.gno.gnomobile.v1.GnomobileService"
  }

  /// Set the connection addresse for the remote node. If you don't call this,
  /// the default is "127.0.0.1:26657"
  ///
  /// - Parameters:
  ///   - request: Request to send to SetRemote.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setRemote(
    _ request: Land_Gno_Gnomobile_V1_SetRemoteRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_SetRemoteRequest, Land_Gno_Gnomobile_V1_SetRemoteResponse> {
    return self.makeUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.setRemote.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetRemoteInterceptors() ?? []
    )
  }

  /// Set the chain ID for the remote node. If you don't call this, the default
  /// is "dev"
  ///
  /// - Parameters:
  ///   - request: Request to send to SetChainID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setChainID(
    _ request: Land_Gno_Gnomobile_V1_SetChainIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_SetChainIDRequest, Land_Gno_Gnomobile_V1_SetChainIDResponse> {
    return self.makeUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.setChainID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetChainIDInterceptors() ?? []
    )
  }

  /// Set the password for the account in the keybase, used for later operations
  ///
  /// - Parameters:
  ///   - request: Request to send to SetPassword.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setPassword(
    _ request: Land_Gno_Gnomobile_V1_SetPasswordRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_SetPasswordRequest, Land_Gno_Gnomobile_V1_SetPasswordResponse> {
    return self.makeUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.setPassword.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetPasswordInterceptors() ?? []
    )
  }

  /// Generate a recovery phrase of BIP39 mnemonic words using entropy from the
  /// crypto library random number generator. This can be used as the mnemonic in
  /// CreateAccount.
  ///
  /// - Parameters:
  ///   - request: Request to send to GenerateRecoveryPhrase.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func generateRecoveryPhrase(
    _ request: Land_Gno_Gnomobile_V1_GenerateRecoveryPhraseRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_GenerateRecoveryPhraseRequest, Land_Gno_Gnomobile_V1_GenerateRecoveryPhraseResponse> {
    return self.makeUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.generateRecoveryPhrase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateRecoveryPhraseInterceptors() ?? []
    )
  }

  /// Get the keys informations in the keybase
  ///
  /// - Parameters:
  ///   - request: Request to send to ListKeyInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func listKeyInfo(
    _ request: Land_Gno_Gnomobile_V1_ListKeyInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_ListKeyInfoRequest, Land_Gno_Gnomobile_V1_ListKeyInfoResponse> {
    return self.makeUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.listKeyInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListKeyInfoInterceptors() ?? []
    )
  }

  /// Create a new account the keybase using the name an password specified by
  /// SetAccount
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createAccount(
    _ request: Land_Gno_Gnomobile_V1_CreateAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_CreateAccountRequest, Land_Gno_Gnomobile_V1_CreateAccountResponse> {
    return self.makeUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.createAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAccountInterceptors() ?? []
    )
  }

  /// SelectAccount selects the active account to use for later operations
  ///
  /// - Parameters:
  ///   - request: Request to send to SelectAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func selectAccount(
    _ request: Land_Gno_Gnomobile_V1_SelectAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_SelectAccountRequest, Land_Gno_Gnomobile_V1_SelectAccountResponse> {
    return self.makeUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.selectAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSelectAccountInterceptors() ?? []
    )
  }

  /// GetActiveAccount gets the active account which was set by SelectAccount.
  /// If there is no active account, then return ErrNoActiveAccount.
  /// (To check if there is an active account, use ListKeyInfo and check the
  /// length of the result.)
  ///
  /// - Parameters:
  ///   - request: Request to send to GetActiveAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getActiveAccount(
    _ request: Land_Gno_Gnomobile_V1_GetActiveAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_GetActiveAccountRequest, Land_Gno_Gnomobile_V1_GetActiveAccountResponse> {
    return self.makeUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.getActiveAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetActiveAccountInterceptors() ?? []
    )
  }

  /// DeleteAccount deletes the account with the given name, using the password to
  /// ensure access. If the account doesn't exist, then return ErrCryptoKeyNotFound.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAccount(
    _ request: Land_Gno_Gnomobile_V1_DeleteAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_DeleteAccountRequest, Land_Gno_Gnomobile_V1_DeleteAccountResponse> {
    return self.makeUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.deleteAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAccountInterceptors() ?? []
    )
  }

  /// Make an ABCI query to the remote node.
  ///
  /// - Parameters:
  ///   - request: Request to send to Query.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func query(
    _ request: Land_Gno_Gnomobile_V1_QueryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_QueryRequest, Land_Gno_Gnomobile_V1_QueryResponse> {
    return self.makeUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.query.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryInterceptors() ?? []
    )
  }

  /// Call a specific realm function.
  ///
  /// - Parameters:
  ///   - request: Request to send to Call.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func call(
    _ request: Land_Gno_Gnomobile_V1_CallRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_CallRequest, Land_Gno_Gnomobile_V1_CallResponse> {
    return self.makeUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.call.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCallInterceptors() ?? []
    )
  }

  /// Hello is for debug purposes
  ///
  /// - Parameters:
  ///   - request: Request to send to Hello.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func hello(
    _ request: Land_Gno_Gnomobile_V1_HelloRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Land_Gno_Gnomobile_V1_HelloRequest, Land_Gno_Gnomobile_V1_HelloResponse> {
    return self.makeUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.hello.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeHelloInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Land_Gno_Gnomobile_V1_GnomobileServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Land_Gno_Gnomobile_V1_GnomobileServiceNIOClient")
internal final class Land_Gno_Gnomobile_V1_GnomobileServiceClient: Land_Gno_Gnomobile_V1_GnomobileServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Land_Gno_Gnomobile_V1_GnomobileServiceClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Land_Gno_Gnomobile_V1_GnomobileServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the land.gno.gnomobile.v1.GnomobileService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Land_Gno_Gnomobile_V1_GnomobileServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Land_Gno_Gnomobile_V1_GnomobileServiceNIOClient: Land_Gno_Gnomobile_V1_GnomobileServiceClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Land_Gno_Gnomobile_V1_GnomobileServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the land.gno.gnomobile.v1.GnomobileService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Land_Gno_Gnomobile_V1_GnomobileServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// GnomobileService is the service to interact with the Gno blockchain
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Land_Gno_Gnomobile_V1_GnomobileServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Land_Gno_Gnomobile_V1_GnomobileServiceClientInterceptorFactoryProtocol? { get }

  func makeSetRemoteCall(
    _ request: Land_Gno_Gnomobile_V1_SetRemoteRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_SetRemoteRequest, Land_Gno_Gnomobile_V1_SetRemoteResponse>

  func makeSetChainIDCall(
    _ request: Land_Gno_Gnomobile_V1_SetChainIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_SetChainIDRequest, Land_Gno_Gnomobile_V1_SetChainIDResponse>

  func makeSetPasswordCall(
    _ request: Land_Gno_Gnomobile_V1_SetPasswordRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_SetPasswordRequest, Land_Gno_Gnomobile_V1_SetPasswordResponse>

  func makeGenerateRecoveryPhraseCall(
    _ request: Land_Gno_Gnomobile_V1_GenerateRecoveryPhraseRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_GenerateRecoveryPhraseRequest, Land_Gno_Gnomobile_V1_GenerateRecoveryPhraseResponse>

  func makeListKeyInfoCall(
    _ request: Land_Gno_Gnomobile_V1_ListKeyInfoRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_ListKeyInfoRequest, Land_Gno_Gnomobile_V1_ListKeyInfoResponse>

  func makeCreateAccountCall(
    _ request: Land_Gno_Gnomobile_V1_CreateAccountRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_CreateAccountRequest, Land_Gno_Gnomobile_V1_CreateAccountResponse>

  func makeSelectAccountCall(
    _ request: Land_Gno_Gnomobile_V1_SelectAccountRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_SelectAccountRequest, Land_Gno_Gnomobile_V1_SelectAccountResponse>

  func makeGetActiveAccountCall(
    _ request: Land_Gno_Gnomobile_V1_GetActiveAccountRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_GetActiveAccountRequest, Land_Gno_Gnomobile_V1_GetActiveAccountResponse>

  func makeDeleteAccountCall(
    _ request: Land_Gno_Gnomobile_V1_DeleteAccountRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_DeleteAccountRequest, Land_Gno_Gnomobile_V1_DeleteAccountResponse>

  func makeQueryCall(
    _ request: Land_Gno_Gnomobile_V1_QueryRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_QueryRequest, Land_Gno_Gnomobile_V1_QueryResponse>

  func makeCallCall(
    _ request: Land_Gno_Gnomobile_V1_CallRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_CallRequest, Land_Gno_Gnomobile_V1_CallResponse>

  func makeHelloCall(
    _ request: Land_Gno_Gnomobile_V1_HelloRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_HelloRequest, Land_Gno_Gnomobile_V1_HelloResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Land_Gno_Gnomobile_V1_GnomobileServiceAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.serviceDescriptor
  }

  internal var interceptors: Land_Gno_Gnomobile_V1_GnomobileServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeSetRemoteCall(
    _ request: Land_Gno_Gnomobile_V1_SetRemoteRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_SetRemoteRequest, Land_Gno_Gnomobile_V1_SetRemoteResponse> {
    return self.makeAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.setRemote.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetRemoteInterceptors() ?? []
    )
  }

  internal func makeSetChainIDCall(
    _ request: Land_Gno_Gnomobile_V1_SetChainIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_SetChainIDRequest, Land_Gno_Gnomobile_V1_SetChainIDResponse> {
    return self.makeAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.setChainID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetChainIDInterceptors() ?? []
    )
  }

  internal func makeSetPasswordCall(
    _ request: Land_Gno_Gnomobile_V1_SetPasswordRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_SetPasswordRequest, Land_Gno_Gnomobile_V1_SetPasswordResponse> {
    return self.makeAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.setPassword.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetPasswordInterceptors() ?? []
    )
  }

  internal func makeGenerateRecoveryPhraseCall(
    _ request: Land_Gno_Gnomobile_V1_GenerateRecoveryPhraseRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_GenerateRecoveryPhraseRequest, Land_Gno_Gnomobile_V1_GenerateRecoveryPhraseResponse> {
    return self.makeAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.generateRecoveryPhrase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateRecoveryPhraseInterceptors() ?? []
    )
  }

  internal func makeListKeyInfoCall(
    _ request: Land_Gno_Gnomobile_V1_ListKeyInfoRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_ListKeyInfoRequest, Land_Gno_Gnomobile_V1_ListKeyInfoResponse> {
    return self.makeAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.listKeyInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListKeyInfoInterceptors() ?? []
    )
  }

  internal func makeCreateAccountCall(
    _ request: Land_Gno_Gnomobile_V1_CreateAccountRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_CreateAccountRequest, Land_Gno_Gnomobile_V1_CreateAccountResponse> {
    return self.makeAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.createAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAccountInterceptors() ?? []
    )
  }

  internal func makeSelectAccountCall(
    _ request: Land_Gno_Gnomobile_V1_SelectAccountRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_SelectAccountRequest, Land_Gno_Gnomobile_V1_SelectAccountResponse> {
    return self.makeAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.selectAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSelectAccountInterceptors() ?? []
    )
  }

  internal func makeGetActiveAccountCall(
    _ request: Land_Gno_Gnomobile_V1_GetActiveAccountRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_GetActiveAccountRequest, Land_Gno_Gnomobile_V1_GetActiveAccountResponse> {
    return self.makeAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.getActiveAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetActiveAccountInterceptors() ?? []
    )
  }

  internal func makeDeleteAccountCall(
    _ request: Land_Gno_Gnomobile_V1_DeleteAccountRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_DeleteAccountRequest, Land_Gno_Gnomobile_V1_DeleteAccountResponse> {
    return self.makeAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.deleteAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAccountInterceptors() ?? []
    )
  }

  internal func makeQueryCall(
    _ request: Land_Gno_Gnomobile_V1_QueryRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_QueryRequest, Land_Gno_Gnomobile_V1_QueryResponse> {
    return self.makeAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.query.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryInterceptors() ?? []
    )
  }

  internal func makeCallCall(
    _ request: Land_Gno_Gnomobile_V1_CallRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_CallRequest, Land_Gno_Gnomobile_V1_CallResponse> {
    return self.makeAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.call.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCallInterceptors() ?? []
    )
  }

  internal func makeHelloCall(
    _ request: Land_Gno_Gnomobile_V1_HelloRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Land_Gno_Gnomobile_V1_HelloRequest, Land_Gno_Gnomobile_V1_HelloResponse> {
    return self.makeAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.hello.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeHelloInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Land_Gno_Gnomobile_V1_GnomobileServiceAsyncClientProtocol {
  internal func setRemote(
    _ request: Land_Gno_Gnomobile_V1_SetRemoteRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Land_Gno_Gnomobile_V1_SetRemoteResponse {
    return try await self.performAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.setRemote.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetRemoteInterceptors() ?? []
    )
  }

  internal func setChainID(
    _ request: Land_Gno_Gnomobile_V1_SetChainIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Land_Gno_Gnomobile_V1_SetChainIDResponse {
    return try await self.performAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.setChainID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetChainIDInterceptors() ?? []
    )
  }

  internal func setPassword(
    _ request: Land_Gno_Gnomobile_V1_SetPasswordRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Land_Gno_Gnomobile_V1_SetPasswordResponse {
    return try await self.performAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.setPassword.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetPasswordInterceptors() ?? []
    )
  }

  internal func generateRecoveryPhrase(
    _ request: Land_Gno_Gnomobile_V1_GenerateRecoveryPhraseRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Land_Gno_Gnomobile_V1_GenerateRecoveryPhraseResponse {
    return try await self.performAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.generateRecoveryPhrase.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateRecoveryPhraseInterceptors() ?? []
    )
  }

  internal func listKeyInfo(
    _ request: Land_Gno_Gnomobile_V1_ListKeyInfoRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Land_Gno_Gnomobile_V1_ListKeyInfoResponse {
    return try await self.performAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.listKeyInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListKeyInfoInterceptors() ?? []
    )
  }

  internal func createAccount(
    _ request: Land_Gno_Gnomobile_V1_CreateAccountRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Land_Gno_Gnomobile_V1_CreateAccountResponse {
    return try await self.performAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.createAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAccountInterceptors() ?? []
    )
  }

  internal func selectAccount(
    _ request: Land_Gno_Gnomobile_V1_SelectAccountRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Land_Gno_Gnomobile_V1_SelectAccountResponse {
    return try await self.performAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.selectAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSelectAccountInterceptors() ?? []
    )
  }

  internal func getActiveAccount(
    _ request: Land_Gno_Gnomobile_V1_GetActiveAccountRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Land_Gno_Gnomobile_V1_GetActiveAccountResponse {
    return try await self.performAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.getActiveAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetActiveAccountInterceptors() ?? []
    )
  }

  internal func deleteAccount(
    _ request: Land_Gno_Gnomobile_V1_DeleteAccountRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Land_Gno_Gnomobile_V1_DeleteAccountResponse {
    return try await self.performAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.deleteAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAccountInterceptors() ?? []
    )
  }

  internal func query(
    _ request: Land_Gno_Gnomobile_V1_QueryRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Land_Gno_Gnomobile_V1_QueryResponse {
    return try await self.performAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.query.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryInterceptors() ?? []
    )
  }

  internal func call(
    _ request: Land_Gno_Gnomobile_V1_CallRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Land_Gno_Gnomobile_V1_CallResponse {
    return try await self.performAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.call.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCallInterceptors() ?? []
    )
  }

  internal func hello(
    _ request: Land_Gno_Gnomobile_V1_HelloRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Land_Gno_Gnomobile_V1_HelloResponse {
    return try await self.performAsyncUnaryCall(
      path: Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.hello.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeHelloInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Land_Gno_Gnomobile_V1_GnomobileServiceAsyncClient: Land_Gno_Gnomobile_V1_GnomobileServiceAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Land_Gno_Gnomobile_V1_GnomobileServiceClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Land_Gno_Gnomobile_V1_GnomobileServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Land_Gno_Gnomobile_V1_GnomobileServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'setRemote'.
  func makeSetRemoteInterceptors() -> [ClientInterceptor<Land_Gno_Gnomobile_V1_SetRemoteRequest, Land_Gno_Gnomobile_V1_SetRemoteResponse>]

  /// - Returns: Interceptors to use when invoking 'setChainID'.
  func makeSetChainIDInterceptors() -> [ClientInterceptor<Land_Gno_Gnomobile_V1_SetChainIDRequest, Land_Gno_Gnomobile_V1_SetChainIDResponse>]

  /// - Returns: Interceptors to use when invoking 'setPassword'.
  func makeSetPasswordInterceptors() -> [ClientInterceptor<Land_Gno_Gnomobile_V1_SetPasswordRequest, Land_Gno_Gnomobile_V1_SetPasswordResponse>]

  /// - Returns: Interceptors to use when invoking 'generateRecoveryPhrase'.
  func makeGenerateRecoveryPhraseInterceptors() -> [ClientInterceptor<Land_Gno_Gnomobile_V1_GenerateRecoveryPhraseRequest, Land_Gno_Gnomobile_V1_GenerateRecoveryPhraseResponse>]

  /// - Returns: Interceptors to use when invoking 'listKeyInfo'.
  func makeListKeyInfoInterceptors() -> [ClientInterceptor<Land_Gno_Gnomobile_V1_ListKeyInfoRequest, Land_Gno_Gnomobile_V1_ListKeyInfoResponse>]

  /// - Returns: Interceptors to use when invoking 'createAccount'.
  func makeCreateAccountInterceptors() -> [ClientInterceptor<Land_Gno_Gnomobile_V1_CreateAccountRequest, Land_Gno_Gnomobile_V1_CreateAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'selectAccount'.
  func makeSelectAccountInterceptors() -> [ClientInterceptor<Land_Gno_Gnomobile_V1_SelectAccountRequest, Land_Gno_Gnomobile_V1_SelectAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'getActiveAccount'.
  func makeGetActiveAccountInterceptors() -> [ClientInterceptor<Land_Gno_Gnomobile_V1_GetActiveAccountRequest, Land_Gno_Gnomobile_V1_GetActiveAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteAccount'.
  func makeDeleteAccountInterceptors() -> [ClientInterceptor<Land_Gno_Gnomobile_V1_DeleteAccountRequest, Land_Gno_Gnomobile_V1_DeleteAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'query'.
  func makeQueryInterceptors() -> [ClientInterceptor<Land_Gno_Gnomobile_V1_QueryRequest, Land_Gno_Gnomobile_V1_QueryResponse>]

  /// - Returns: Interceptors to use when invoking 'call'.
  func makeCallInterceptors() -> [ClientInterceptor<Land_Gno_Gnomobile_V1_CallRequest, Land_Gno_Gnomobile_V1_CallResponse>]

  /// - Returns: Interceptors to use when invoking 'hello'.
  func makeHelloInterceptors() -> [ClientInterceptor<Land_Gno_Gnomobile_V1_HelloRequest, Land_Gno_Gnomobile_V1_HelloResponse>]
}

internal enum Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "GnomobileService",
    fullName: "land.gno.gnomobile.v1.GnomobileService",
    methods: [
      Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.setRemote,
      Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.setChainID,
      Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.setPassword,
      Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.generateRecoveryPhrase,
      Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.listKeyInfo,
      Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.createAccount,
      Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.selectAccount,
      Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.getActiveAccount,
      Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.deleteAccount,
      Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.query,
      Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.call,
      Land_Gno_Gnomobile_V1_GnomobileServiceClientMetadata.Methods.hello,
    ]
  )

  internal enum Methods {
    internal static let setRemote = GRPCMethodDescriptor(
      name: "SetRemote",
      path: "/land.gno.gnomobile.v1.GnomobileService/SetRemote",
      type: GRPCCallType.unary
    )

    internal static let setChainID = GRPCMethodDescriptor(
      name: "SetChainID",
      path: "/land.gno.gnomobile.v1.GnomobileService/SetChainID",
      type: GRPCCallType.unary
    )

    internal static let setPassword = GRPCMethodDescriptor(
      name: "SetPassword",
      path: "/land.gno.gnomobile.v1.GnomobileService/SetPassword",
      type: GRPCCallType.unary
    )

    internal static let generateRecoveryPhrase = GRPCMethodDescriptor(
      name: "GenerateRecoveryPhrase",
      path: "/land.gno.gnomobile.v1.GnomobileService/GenerateRecoveryPhrase",
      type: GRPCCallType.unary
    )

    internal static let listKeyInfo = GRPCMethodDescriptor(
      name: "ListKeyInfo",
      path: "/land.gno.gnomobile.v1.GnomobileService/ListKeyInfo",
      type: GRPCCallType.unary
    )

    internal static let createAccount = GRPCMethodDescriptor(
      name: "CreateAccount",
      path: "/land.gno.gnomobile.v1.GnomobileService/CreateAccount",
      type: GRPCCallType.unary
    )

    internal static let selectAccount = GRPCMethodDescriptor(
      name: "SelectAccount",
      path: "/land.gno.gnomobile.v1.GnomobileService/SelectAccount",
      type: GRPCCallType.unary
    )

    internal static let getActiveAccount = GRPCMethodDescriptor(
      name: "GetActiveAccount",
      path: "/land.gno.gnomobile.v1.GnomobileService/GetActiveAccount",
      type: GRPCCallType.unary
    )

    internal static let deleteAccount = GRPCMethodDescriptor(
      name: "DeleteAccount",
      path: "/land.gno.gnomobile.v1.GnomobileService/DeleteAccount",
      type: GRPCCallType.unary
    )

    internal static let query = GRPCMethodDescriptor(
      name: "Query",
      path: "/land.gno.gnomobile.v1.GnomobileService/Query",
      type: GRPCCallType.unary
    )

    internal static let call = GRPCMethodDescriptor(
      name: "Call",
      path: "/land.gno.gnomobile.v1.GnomobileService/Call",
      type: GRPCCallType.unary
    )

    internal static let hello = GRPCMethodDescriptor(
      name: "Hello",
      path: "/land.gno.gnomobile.v1.GnomobileService/Hello",
      type: GRPCCallType.unary
    )
  }
}

